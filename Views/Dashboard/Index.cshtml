
@{
    ViewData["Title"] = "Kokpit";
    Layout = "~/Views/Shared/_Dashboard.cshtml";
}

<h1>Intranet - twoje zaplecze</h1>


<b>04.02.2023</b>
-Poprawiana literowka w email </br>
 foreach (PInfo NazwaProduktu in WyszukaneNazwyProdukow) </br>
                { </br>
                    if (NazwaProduktu.Name.Contains(szukanaNazwa) || NazwaProduktu.Symbol.Contains(szukanaNazwa)) // jesli jakas nazwa jest w liscie  </br>
                    { </br>
                        WyszukaneProduktyLowerName.Add(WszystkieProdukty.Find(x => x.Name.ToLower() == NazwaProduktu.Name)); </br>
                    }</br>
                }</br>
                </br>
                -Czyli z uwagi na fakt ze nie zablokowałem możliwosci powtarzajacych sie nazw produktów, a napisałem że jak nazwa produktu równa się nazwa produktu to dodaj produkt do <br />
                wyniku wyszukiwania<br /> 
                ale równiez jest jak widać .Find czyli ten który znajduje sie jako pierwszy.<br />
                długo tłumaczyć. <br />
                w każdym razie tu jest rozwiazanie <br>
                WyszukaneProduktyLowerName.Add(WszystkieProdukty.Find(x => x.Symbol.ToLower() == NazwaProduktu.Symbol));<br /> 
                Zmieniłem po sylbolu<br />
                z uwagi ze symbole nie moga się powtarzać wtedy wynik wyszukiwania bedzie prawidłowy pomimo powtarzającej się nazwy produktu w asortymencie<br />
                <br /> 
                -blokada dodawania sztucznej ilosci w bocznym panelu zamówienia <br />



<b>04.02.2023</b>
- Jesli anulujemy zamowienie stan produktow wroci do ilosci takiej jakiej byly
<br />
- Chyba udalo sie w Liscie Produktow uporac problem ze scrolowanem daje wam do testowania.
<br />
- Platforma sie rozwija. Nadaje jej wersje 1.0.0
<br />
<b>02.02.2023</b>
<br />
- Analiza błedu ilościowy generowany w XML<br />
- Po analizie kodu wynikło że: dla produktu poniżej ilość 8 generuje się ilość taka jaka ona faktycznie jest wpisana w bazie danych, <br />
a powyżej 8, xml generuje wpisując dla danego produktu iloś 8 (dla pojedynczego przykładu czyt. produktu). <br />
Domyślnie dla pojedynczego produktu domyśłnie w pliku xml nadawana jest wartość 0.<br />
Następuje sprawdzana jest ilość produktu jaka jest wpisana w bazie danych.<br>
Następnie w zależności czy jest większe lub mniejsze od liczby 8 to wypełnia się<br />
albo faktyczny stanem ilość gdy jest mniejszy od 8 albo jeśli ilość jest większa 8 to wpisuje liczbę 8.<br />
Warunek nie uwzględniał przypadku, gdy ilość produktu równa się dokładnie 8. Wtedy domyślnie brał domyślną ilość czyli 0.<br />
- Problem zlokalizowany i problem poprawiony. <br />
<br />
if (produkty[i].Ilosc > 8)<br />
CDatastoc = doc.CreateCDataSection("8");
<br />
else if (produkty[i].Ilosc <= 8)
<br />
int ile = Decimal.ToInt32(produkty[i].Ilosc);
<br />
CDatastoc = doc.CreateCDataSection(ile.ToString());
<br />
else if (produkty[i].Ukryty==true)
<br />
CDatastoc = doc.CreateCDataSection("0");
<br />

<b>30.01.2023</b><br />
- Wyszukiwanie po zagranicznym Nr firmy w Systemie <br />
-Klient zagraniczny może się zarejestrować <br />
- Wyszukiwanie firm zagranicznych po nr <br />
- Możliwość dodania klienta zagranicznego <br />
<br />
<b>24.01.2023</b><br />
- Poprawienie koszyków <br />
- Dodanie możliwości zmiany ilosci produktu w Zamówienia <br />
- do PDF zamówienia dodana informacja o Metodzie wysyłki <br />
- dodanie pola "Nazwa Firmy" w formularzu "Adres dostawy" <br />


<b>21.01.2023</b><br />
- Optymalizacja logowania <br />
- Poprawienie koszyków <br />
- Optymalizacja strony <br />
- Dodanie możliwości zaznaczenia pozycji w Produktach <br />
- Dodanie badge nowych użytkowników<br />
- Liczne poprawki<br />
- Usunięcie błędów serverowych<br />
- Aktualizacja do .NET7 <br />

