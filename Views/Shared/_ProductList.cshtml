@model IEnumerable<partner_aluro.Models.Product>
@using X.PagedList
@using X.PagedList.Mvc.Core

    @foreach (var produkt in ViewBag.OnePageOfProducts)
    {    
        @*@Html.HiddenFor(h=>produkt.ProductId)*@
        <div class="card-deck col-12 col-md-6 col-lg-4" id="SekcjaListaKategori">
            <div class="card m-1">
                <div class="thumbnail">
                    <a class="product-name link-dark" asp-controller="Product" asp-action="Details" asp-route-id="@produkt.ProductId">
                        <img class="card-img-top" src="~/images/produkty/@produkt.Symbol/@produkt.ImageUrl" alt="@produkt.Name" style="width:260px;">
                    </a>
                </div>
                <div>
                    <div class="row card-bar-action justify-content-center align-items-center">

                           @if (produkt.Ilosc <= 0)
                           {
                            <div class="col" align="center">Produkt jest już niedostępny</div>

                           }else
                           {
                        <div class="col-4 d-none d-sm-none d-md-none d-lg-block text-wrap text-break">
                                <input type="number" id="@produkt.ProductId" name="quantity" value="1" class="form-control" aria-required="true" placeholder="Ilość" min="1" max="@produkt.Ilosc" />
                           </div>
                           <div class="col">
                                <button value="@produkt.ProductId" onclick="AddToCart(@produkt.ProductId)" data-bs-target="offcanvas" role="button">Dodaj do zamowienia</button>
                           </div>
                           }
                    </div>
                <div class="row p-1">
                        <p>
                            <span>
                                    <b>@produkt.Symbol</b><br>
                            </span>
                            <span>
                            <a class="text-decoration-none link-dark" asp-controller="Product" asp-action="Details" asp-route-id="@produkt.ProductId">
                                    @produkt.Name <br>
                                </a>
                            </span>
                        </p>

                        @{
                        var Cena_brutto = (decimal)produkt.CenaProduktu * (decimal)partner_aluro.Core.Constants.Vat;


                        var CenaJednostkowa = Cena_brutto * (1 - (partner_aluro.Core.Constants.Rabat / 100));
                        }

                        <div class="float-end text-end">
                            Cena hurtowa: @produkt.CenaProduktu.ToString("C") (netto)
                        </div>
                         @*   Twoja cena po rabacie: @CenaJednostkowa.ToString("C") <br>*@
                    <div class="float-end text-end">@Cena_brutto.ToString("C") <span class="brutto">(brutto)</span>
                    </div>

                            @if (partner_aluro.Core.Constants.Rabat != 0 &&  partner_aluro.Core.Constants.Rabat >= 0)
                            {
                            <div class="float-end text-end">Twoja cena po rabacie: @CenaJednostkowa.ToString("C") </div>
                            }
                    <div class="float-end text-end">Cena detaliczna: @produkt.CenaProduktuDetal.ToString("C") </div>
                    </div>
                </div>
            </div>
        </div>
    }
    
@Html.PagedListPager( (IPagedList)ViewBag.OnePageOfProducts, page => Url.Action("Lista", "Category", new { page = page, szukanaNazwa=ViewData["szukanaNazwa"] } )
,
new X.PagedList.Web.Common.PagedListRenderOptions{
    DisplayEllipsesWhenNotShowingAllPageNumbers = false,
    LiElementClasses = new string[] { "page-item" },
    PageClasses = new string[] { "page-link" }
}

)