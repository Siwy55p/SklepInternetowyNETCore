@model IEnumerable<partner_aluro.Models.Product>
@using X.PagedList.Mvc.Core; 
@using X.PagedList;



    @foreach (var produkt in ViewBag.OnePageOfProducts)
    {    
        @*@Html.HiddenFor(h=>produkt.ProductId)*@
        <div class="col-12 col-md-6 col-lg-4" id="SekcjaListaKategori">
            <div class="card my-2">
                @{
                    var CenaJednostkowa = produkt.CenaProduktu * (1 - (partner_aluro.Core.Constants.Rabat / 100));
                }
                <div class="thumbnail"><img src="~/images/produkty/@produkt.Symbol/@produkt.ImageUrl" alt="@produkt.Name" style="width:260px;"></div>
                <div class="card-body">

                    <form asp-controller="Cart" asp-action="AddToCart" asp-route-id="@produkt.ProductId" asp-route-quantity="quantity" method="POST">
                            <div class="row">
                                <div class="col-4">
                                <input type="number" id="quantity" name="quantity" class="form-control" aria-required="true" placeholder="Ilość" value="1" min="1" max="20" />

                            </div>
                            <div class="col">
                                <button class="btn btn-success" data-bs-toggle="offcanvas" value="quantity" data-bs-target="#offcanvas" role="button">Dodaj do zamowienia</button>
                            </div>

                            </div>
                    </form>
                    <p class="card-text"><b>@produkt.Symbol</b></p>
                    <p class="card-text"><a class="product-name link-dark" asp-controller="Product" asp-action="Details" asp-route-id="@produkt.ProductId">@produkt.Name</a></p>
                    <p class="text-right">Cena: @produkt.CenaProduktu.ToString("C") </p>
                    <p class="text-xl-right">Twoja cena: @CenaJednostkowa.ToString("C") </p>
                    
                </div>
            </div>
        </div>
    }

    <!-- output a paging control that lets the user navigation to the previous page, next page, etc -->
@Html.PagedListPager( (IPagedList)ViewBag.OnePageOfProducts, page => Url.Action("Lista", "Category", new { page = page, szukanaNazwa=ViewData["szukanaNazwa"] } ) )

