@model partner_aluro.Models.Product
@using X.PagedList
@using X.PagedList.Mvc.Core

@inject LanguageService language

<div class="card"> @*odstepy miedzy kartami w stylu site.css pozycja card*@
    @if (Model.Promocja == true && Model.CenaPromocyja != null)
    {   
            decimal ProcentPromocji = (decimal)(1 - (Model.CenaPromocyja / Model.CenaProduktu)) * 100;

        <div class="sale">@ProcentPromocji.ToString("##.") %</div>
    }

    <div class="thumbnail">
        <a class="product-name link-dark" asp-controller="Product" asp-action="Details" asp-route-id="@Model.ProductId">
            <img class="card-img-top" src="~/images/produkty/@Model.Symbol/@Model.ImageUrl" alt="@Model.Name" style="width:260px;">
        </a>
    </div>
    <div class="row card-bar-action justify-content-center align-items-center">

        @if (Model.Ilosc <= 0)
        {
            <div class="col" align="center">@language.Getkey("ProduktNiedostępny")</div>
        }
        else
        {
            <div class="col-4 d-none d-sm-none d-md-none d-lg-block text-wrap text-break">
                <input type="number" id="@Model.ProductId" name="quantity" value="1" class="form-control" aria-required="true" placeholder="Ilość" min="1" max="@Model.Ilosc" />
            </div>
            <div class="col">
                <button value="@Model.ProductId" onclick="AddToCart(@Model.ProductId)" data-bs-target="offcanvas" role="button">@language.Getkey("Dodaj do zamowienia")</button>
            </div>
        }
    </div>
    <div class="row p-1">
        <div>
            <div class="row">
                <b>@Model.Symbol</b><br>
            </div>
            <div class="row text-decoration-none link-dark text-wrap">
                <a class="text-decoration-none link-dark text-wrap" asp-controller="Product" asp-action="Details" asp-route-id="@Model.ProductId">
                    @language.Getkey(@Model.Name) <br>
                </a>
            </div>
        </div>
        @{
            var Cena_brutto = (decimal)Model.CenaProduktu * (decimal)partner_aluro.Core.Constants.Vat;

            var CenaJednostkowa = Cena_brutto * (1 - (partner_aluro.Core.Constants.Rabat / 100));
        }
        <div class="float-end text-end">
            @language.Getkey("CenaHurtowa"): @Model.CenaProduktu.ToString("C") (netto)
        </div>
        <div class="float-end text-end">
            @Cena_brutto.ToString("C") <span class="brutto">(brutto)</span>
        </div>

        @if (partner_aluro.Core.Constants.Rabat != 0 && partner_aluro.Core.Constants.Rabat >= 0)
        {
            <div class="float-end text-end">@language.Getkey("Twoja cena po rabacie"): @CenaJednostkowa.ToString("C") </div>
        }
        <div class="float-end text-end">@language.Getkey("CenaDetaliczna"): @Model.CenaProduktuDetal.ToString() </div>
    </div>
</div>