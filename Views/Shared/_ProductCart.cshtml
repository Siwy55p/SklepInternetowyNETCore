@model partner_aluro.Models.Product
@using partner_aluro.Core;
@using X.PagedList
@using X.PagedList.Mvc.Core
@using Microsoft.AspNetCore.Mvc.Localization
@using System.Globalization;
@using partner_aluro.Resources;

@inject LanguageService language

<div class="card"> @*odstepy miedzy kartami w stylu site.css pozycja card*@
    @if (Model.Promocja == true)
    {   
            decimal ProcentPromocji = (1 - (Model.CenaPromocyja / Model.CenaProduktuBrutto)) * 100;

        <div class="sale">@ProcentPromocji.ToString("##.") %</div>
    }

    <div class="thumbnail">
        <a class="product-name link-dark" asp-controller="Product" asp-action="Details" asp-route-id="@Model.ProductId">
            <img class="card-img-top" onerror="this.onerror=null;this.src='../img/noimage.png';" src="~/img/p/@Model.Symbol/250x250_@Model.ImageUrl" alt="@Model.Name" >
           @* <img class="card-img-top" onerror="this.onerror=null;this.src='../iag/noimage.png';" src="~/img/produkty/@Model.Symbol/@Model.Product_Images.Where(x=>x.kolejnosc==0).FirstOrDefault().ImageNameCompress250x250" alt="@Model.Name">*@
        </a>
    </div>
    <div class="row card-bar-action justify-content-center align-items-center">

        @if (Model.Ilosc <= 0)
        {
            <div class="col" align="center">@language.Getkey("ProduktNiedostępny")</div>
        }
        else
        {
            <div class="col-4 d-none d-sm-none d-md-none d-lg-block text-wrap text-break text-end justify-content-end">
                <input type="number" id="@Model.ProductId" name="quantity" value="1" class="form-control" aria-required="true" placeholder="Ilość" min="1" maxlength="@Model.Ilosc" max="@Model.Ilosc" autocomplete="off" onChange="updateQuantityManual(this)" />
            </div>
            <div class="col justify-content-center text-center">
                <button value="@Model.ProductId" class="btn btn-success" onclick="AddToCart(@Model.ProductId)" data-bs-target="offcanvas" role="button">@language.Getkey("Dodaj do zamowienia")</button>
            </div>
        }
    </div>
    <div class="row p-1">
        <div>
            <div class="row">
                <b>@Model.Symbol</b><br>
            </div>
            <div class="row text-decoration-none link-dark text-wrap">
                <a class="text-decoration-none link-dark text-wrap produkt_name" asp-controller="Product" asp-action="Details" asp-route-id="@Model.ProductId">
                    @language.Getkey(@Model.Name) <br>
                </a>
            </div>
        </div>
        @{
            var Cena_brutto = Model.CenaProduktuBrutto * partner_aluro.Core.Constants.Vat;

            var CenaJednostkowa = Cena_brutto * (1 - (partner_aluro.Core.Constants.Rabat / 100));

            var cena_produktu = @Model.CenaProduktuBrutto;

            //if (culture == "en")
            //{


                //if (Constants.Euro != null)
                //{

                //@language.GetCurrently(@Model.CenaProduktuBrutto, "EUR");

                ////cena_produktu = (decimal)@Model.CenaProduktuBrutto / (decimal)Constants.Euro.rates[0].mid;
                //}
            //}

        }
        <div class="float-end text-end">
            @language.Getkey("CenaHurtowa"): @language.GetCurrently(@cena_produktu, Constants.myNumberFormatInfo).ToString("C",Constants.myNumberFormatInfo) @language.Getkey("(netto)")


        </div>
        <div class="float-end text-end">
            @language.GetCurrently(@Cena_brutto, Constants.myNumberFormatInfo).ToString("C",Constants.myNumberFormatInfo) <span class="brutto">@language.Getkey("(brutto)")</span>
        </div>

        @if (partner_aluro.Core.Constants.Rabat != 0 && partner_aluro.Core.Constants.Rabat >= 0)
        {
            <div class="float-end text-end">@language.Getkey("Twoja cena po rabacie"): @language.GetCurrently(@CenaJednostkowa, Constants.myNumberFormatInfo).ToString("C",Constants.myNumberFormatInfo)) </div>
        }
        <div class="float-end text-end">@language.Getkey("CenaDetaliczna"): @language.GetCurrently(@Model.CenaProduktuDetal,Constants.myNumberFormatInfo).ToString("C",Constants.myNumberFormatInfo) </div>
    </div>
</div>