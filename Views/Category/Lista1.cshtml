@{
    ViewData["Title"] = "Kategoria";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@inject LanguageService language
<div class="row justify-content-center align-items-center Category">
    <div class="col-sm-12 col-md-12 col-lg-12 col-xl-10 col-xxl-8 ">

        @*MENU LEFA STRONA LEFT KATEGORIE*@
        <div class="row">
           @* <div class="col-12 col-md-4 col-lg-4 col-xl-4 col-xxl-3 d-none d-sm-none d-md-none d-lg-block">*@
            <div class="col d-none d-sm-none d-md-none d-lg-block" style="max-width:245px;">
                <div class="row custom-kategory-menu sticky-top">
                        @await Component.InvokeAsync("MenuCategory")
                </div>
            </div>@*
            @*CONTENT PRAWA STRONA*@
            <div class="col px-3 m-0"> @*tutajdodalem kolor*@
                @*HEADER*@
                <div class="row mb-1 bg-white py-2 border">
                    <div class="col start d-flex">
                        <!-- Breadcrumb -->
                        <breadcrumb></breadcrumb>
                    </div>
                    <div class="col d-flex justify-content-end" style="max-width:110px">
                        <!-- Select -->
                        <div class="dropdown">
                            <button class="sortuj dropdown-toggle" type="button" id="dropdownMenuButtonSort" data-bs-toggle="dropdown" aria-expanded="false">
                                @language.Getkey("Sortuj")
                            </button>
                            @{
                                int sort = (int)ViewData["sort"];

                                string activecat1 = "";
                                string activecat2 = "";
                                string activecat3 = "";
                                string activecat4 = "";
                                string activecat5 = "";

                            }
                            @if(sort == 1)
                            {
                                activecat1 = "activecat";
                            }
                            else if (sort == 2)
                            {
                                activecat2 = "activecat";
                            }
                            else if (sort == 3)
                            {
                                activecat3 = "activecat";
                            }
                            else if (sort == 4)
                            {
                                activecat4 = "activecat";
                            }
                            else if (sort == 5)
                            {
                                activecat5 = "activecat";
                            }

                            <ul class="dropdown-menu text-decoration-none">
                                <li class="@activecat1 menu_kat">@Html.ActionLink(language.Getkey("Najnowsze"), "Lista", "Category", new { page = 1, szukanaNazwa=ViewData["szukanaNazwa"], sort=1 } , new { @class = "kategoria_class_menu"} )</li>
                                <li class="@activecat2 menu_kat">@Html.ActionLink(language.Getkey("Alfabetycznie od A do Z"), "Lista", "Category", new { page = 1, szukanaNazwa=ViewData["szukanaNazwa"], sort=2 }, new { @class = "kategoria_class_menu"} )</li>
                                <li class="@activecat3 menu_kat">@Html.ActionLink(language.Getkey("Alfabetycznie od Z do A"), "Lista", "Category", new { page = 1, szukanaNazwa=ViewData["szukanaNazwa"], sort=3 }, new { @class = "kategoria_class_menu"} )</li>
                                <li class="@activecat4 menu_kat">@Html.ActionLink(language.Getkey("Symbol od najmniejszej do największej"), "Lista", "Category", new { page = 1, szukanaNazwa=ViewData["szukanaNazwa"], sort=4 }, new { @class = "kategoria_class_menu"} )</li>
                                <li class="@activecat5 menu_kat">@Html.ActionLink(language.Getkey("Symbol od największej do najmniejszej"), "Lista", "Category", new { page = 1, szukanaNazwa=ViewData["szukanaNazwa"], sort=5 }, new { @class = "kategoria_class_menu"} )</li>
                            </ul>
                        </div>
                    </div>
                </div>
                @*PRODKUCTS*@
                <div class="row bg-light p-1 border" id="SekcjaListaKategori">
                    
                    @await Html.PartialAsync("_ProductList")
                </div>
            </div>
        </div>
    </div>
</div>
@section Scripts{

    <script>
        function updateQuantityManual(_this) {
            let lot = 1;
            let qty = parseInt($(_this).val(), 10);
            let max = parseInt($(_this).attr('max'));
            let myQty = parseInt(qty, 10);

            if (qty > max) {
                $(_this).val(max);
                alert("Nie ma wystarczającej ilości na stanie.");
                return;
            }

            if ($(_this).data('lot')) {
                lot = parseInt($(_this).attr('data-lot'), 10);
            }


            if (qty % lot != 0) {
                qty = myQty + lot - (qty % lot);
                $(_this).val(qty);
            }
        }
    </script>

    <script>
        function AddToCart(ProductId) {
            var myOffcanvas = document.getElementById('offcanvas');
            var bsOffcanvas = new bootstrap.Offcanvas(myOffcanvas);
            bsOffcanvas.show();

            var quantity = document.getElementById(ProductId).value;
            $.ajax({
                type: "POST",
                url: '@Url.Action("AddToCart2", "Cart")',
                data: { ProductId: ProductId, quantity: quantity },
                success: function (result) {
                    $("#mydiv").load(location.href + " #mydiv");
                },

                error: function (abc) {
                    alert(abc.statusText);
                },
            });
        }
    </script>

    <script>
        function ReduceQuantity(ProductId) {

            $.ajax({
                type: "POST",
                url: '@Url.Action("ReduceQuantity2", "Cart")',
                data: { id: ProductId },
                success: function (result) {
                    $("#mydiv").load(location.href + " #mydiv");
                },

                error: function (abc) {
                    alert(abc.statusText);
                },
            });
        }
    </script>

    <script>
        function IncreaseQuantity(ProductId, Quantity) {

            $.ajax({
                type: "POST",
                url: '@Url.Action("IncreaseQuantity2", "Cart")',
                data: { id: ProductId, Quantity: Quantity },
                success: function (result) {
                    $("#mydiv").load(location.href + " #mydiv");
                },

                error: function (abc) {
                    alert(abc.statusText);
                },
            });
        }
    </script>


    <script>
        function RemoveFromCart(ProductId) {

            $.ajax({
                type: "POST",
                url: '@Url.Action("RemoveFromCart2", "Cart")',
                data: { id: ProductId },
                success: function (result) {
                    $("#mydiv").load(location.href + " #mydiv");
                },

                error: function (abc) {
                    alert(abc.statusText);
                },
            });
        }
    </script>
}